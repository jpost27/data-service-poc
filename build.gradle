plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.diffplug.spotless' version '6.21.0'
}

group = 'com.jp'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {

    def lombokVersion = '1.18.28'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation 'org.springframework.boot:spring-boot-starter'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.graphql:spring-graphql:1.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'

    runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'

    developmentOnly 'io.netty:netty-resolver-dns-native-macos:4.1.72.Final:osx-aarch_64'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:3.0.0'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.2.0-M2'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

spotless {
    java {
        ratchetFrom 'origin/main'
        target '**/src/*/java/**/*.java'
        importOrder()
        removeUnusedImports()
        toggleOffOn()
        palantirJavaFormat()
        endWithNewline()
        custom 'noWildcardImports', {
            if (it.contains('*;\n')) {
                throw new Error('No wildcard imports allowed')
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
