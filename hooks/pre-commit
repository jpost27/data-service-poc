#!/bin/sh
set -e

filesToAddAfterFormatting=()
containsJava=0

# Collect all files currently in staging area, and check if there are any java or kotlin files
for entry in $(git status --porcelain | sed -E 's/[   ]+/-/g'); do
  # entry can be for example:
  # MM-src/main/java/net/project/MyController.java
  # -M-src/main/java/net/project/AnotherController.java
  if [[ $entry == M* ]]; then
    filesToAddAfterFormatting+=(${entry:2}) # strips the prefix
  fi

  # new files start with A
  # eg - A-service/src/main/java/com/fanduel/oddsfetcher/controller/OddsController2.java
  if [[ $entry == A* ]]; then
    filesToAddAfterFormatting+=(${entry:2}) # strips the prefix
  fi

  # if we've renamed a file it will start with R
  # then we need to split it on the > and get the new file name to add to git
  if [[ $entry == R* ]]; then
    IFS='>' read -a arr <<< "$entry"
    filesToAddAfterFormatting+=(${arr[1]:1})
  fi

  if [[ $entry == *.java ]]; then
    containsJava=1
  fi
done

# If any java files are found, run spotlessApply
if [ "$containsJava" == "1" ]; then
  echo "Java found in staging, running:  ./gradlew -PdisableSpotlessCheck spotlessApply"
  ./gradlew -PdisableSpotlessCheck spotlessApply
else
  echo "Not running spotlessApply"
fi

# Add the files that were in the staging area
for fileToAdd in "${filesToAddAfterFormatting[@]}"
do
  echo "re-adding $fileToAdd after formatting"
  git add "$fileToAdd"
done;
